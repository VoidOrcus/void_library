-- ===================================================================================
-- || BIBLIOTECA MODERN UI (VERSÃO 9.0 - RECONSTRUÍDA DO ZERO) ||
-- ===================================================================================
--[[
	Autor: Gemini (a seu pedido)
	Descrição: Uma biblioteca de UI moderna, robusta e modular para Roblox.
	Funcionalidades:
		- Janela arrastável com barra de título.
		- Botões de fechar, minimizar e maximizar.
		- Paginação de abas na vertical com scroll automático.
		- Componentes: Botão, Label, Slider, Dropdown, Checkbox, Toggle.
		- Sistema de tema para fácil customização.
		- Animações suaves em todas as interações.
]]
local ModernUI = (function()
	local Lib = {}
	Lib.__index = Lib

	local Tab = {}
	Tab.__index = Tab

	--================================================================
	-- SERVIÇOS
	--================================================================
	local TweenService = game:GetService("TweenService")
	local UserInputService = game:GetService("UserInputService")
	local CoreGui = game:GetService("CoreGui")

	--================================================================
	-- TEMA PADRÃO
	--================================================================
	local Theme = {
		Background = Color3.fromRGB(21, 23, 29),
		Primary = Color3.fromRGB(30, 32, 40),
		Secondary = Color3.fromRGB(40, 42, 52),
		Accent = Color3.fromRGB(88, 110, 245),
		Text = Color3.fromRGB(200, 200, 200),
		TextMuted = Color3.fromRGB(120, 120, 120),
		Close = Color3.fromRGB(237, 66, 69),
		FontTitle = Enum.Font.GothamSemibold,
		FontBody = Enum.Font.Gotham,
		AnimationSpeed = 0.2,
		CornerRadius = 6,
	}

	--================================================================
	-- FUNÇÕES AUXILIARES
	--================================================================
	local function Create(instanceType, properties)
		local inst = Instance.new(instanceType)
		for prop, value in pairs(properties or {}) do
			inst[prop] = value
		end
		return inst
	end

	local function Animate(instance, goal)
		local tween = TweenService:Create(instance, TweenInfo.new(Theme.AnimationSpeed, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), goal)
		tween:Play()
		return tween
	end

	--================================================================
	-- CRIAÇÃO DA JANELA PRINCIPAL
	--================================================================
	function Lib.CreateWindow(options)
		local self = setmetatable({}, Lib)
		options = options or {}
		
		self.Tabs = {}
		self.ActiveTab = nil
		self.OriginalProperties = {}

		-- Cria a base da UI
		self.ScreenGui = Create("ScreenGui", { Name = "ModernUI", Parent = CoreGui, ZIndexBehavior = Enum.ZIndexBehavior.Global, ResetOnSpawn = false })
		self.Window = Create("Frame", {
			Name = "Window", Size = options.Size or UDim2.fromOffset(600, 400), Position = UDim2.fromScale(0.5, 0.5), AnchorPoint = Vector2.new(0.5, 0.5),
			BackgroundColor3 = Theme.Primary, BorderSizePixel = 0, Parent = self.ScreenGui, ClipsDescendants = true,
		})
		self.OriginalProperties = { Size = self.Window.Size, Position = self.Window.Position }
		Create("UICorner", { CornerRadius = UDim.new(0, Theme.CornerRadius), Parent = self.Window })

		-- BARRA DE TÍTULO
		local TitleBar = Create("Frame", { Name = "TitleBar", Size = UDim2.new(1, 0, 0, 35), BackgroundColor3 = Theme.Secondary, BorderSizePixel = 0, Parent = self.Window, ZIndex = 2 })
		Create("TextLabel", { Name = "Title", Size = UDim2.new(1, -95, 1, 0), Position = UDim2.fromOffset(15, 0), BackgroundTransparency = 1, Font = Theme.FontTitle, Text = options.Title or "ModernUI", TextColor3 = Theme.Text, TextXAlignment = Enum.TextXAlignment.Left, TextSize = 16, ZIndex = 3, Parent = TitleBar })

		-- LÓGICA PARA ARRASTAR A JANELA
		TitleBar.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				local dragStart = input.Position
				local startPos = self.Window.Position
				local moveConn, endConn
				moveConn = input.Changed:Connect(function()
					local newPos = input.Position
					self.Window.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + (newPos.X - dragStart.X), startPos.Y.Scale, startPos.Y.Offset + (newPos.Y - dragStart.Y))
				end)
				endConn = UserInputService.InputEnded:Connect(function(endInput)
					if endInput == input then
						moveConn:Disconnect()
						endConn:Disconnect()
					end
				end)
			end
		end)

		-- BOTÕES DA JANELA (FECHAR, MINIMIZAR, MAXIMIZAR)
		local WindowButtons = Create("Frame", { Name = "WindowButtons", Size = UDim2.fromOffset(80, 35), Position = UDim2.new(1, -85, 0, 0), BackgroundTransparency = 1, Parent = TitleBar, ZIndex = 4 })
		Create("UIListLayout", { FillDirection = Enum.FillDirection.Horizontal, HorizontalAlignment = Enum.HorizontalAlignment.Right, VerticalAlignment = Enum.VerticalAlignment.Center, Padding = UDim.new(0, 5), Parent = WindowButtons })

		local function CreateWinBtn(name, order, iconFunc, hoverColor)
			local btn = Create("TextButton", {Name=name, LayoutOrder=order, Size=UDim2.fromOffset(22, 22), BackgroundColor3=Theme.Secondary, Text="", Parent=WindowButtons, AutoButtonColor=false, ZIndex=5})
			Create("UICorner", {CornerRadius = UDim.new(0, 4), Parent=btn}); iconFunc(btn)
			btn.MouseEnter:Connect(function() Animate(btn, {BackgroundColor3 = hoverColor}) end)
			btn.MouseLeave:Connect(function() Animate(btn, {BackgroundColor3 = Theme.Secondary}) end)
			return btn
		end

		local Minimize = CreateWinBtn("Minimize", 1, function(p) Create("Frame",{Size=UDim2.new(0.5,0,0,2), Position=UDim2.fromScale(0.5,0.5), AnchorPoint=Vector2.new(0.5,0.5), BackgroundColor3=Theme.TextMuted, BorderSizePixel=0, Parent=p}) end, Theme.Primary)
		local Maximize = CreateWinBtn("Maximize", 2, function(p) Create("Frame",{Size=UDim2.new(0.4,0,0.4,0), Position=UDim2.fromScale(0.5,0.5), AnchorPoint=Vector2.new(0.5,0.5), BackgroundTransparency=1, BorderColor3=Theme.TextMuted, BorderSizePixel=2, Parent=p}) end, Theme.Primary)
		local Close = CreateWinBtn("Close", 3, function(p) local l1=Create("Frame",{Size=UDim2.new(0.6,0,0,2), Rotation=45, Parent=p}); local l2=l1:Clone();l2.Rotation=-45;l2.Parent=p; for _,l in pairs(p:GetChildren()) do if l:IsA("Frame") then l.Position=UDim2.fromScale(0.5,0.5);l.AnchorPoint=Vector2.new(0.5,0.5);l.BackgroundColor3=Theme.TextMuted end end end, Theme.Close)

		Close.MouseButton1Click:Connect(function() self.ScreenGui:Destroy() end)
		Minimize.MouseButton1Click:Connect(function() Animate(self.Window, {Size = UDim2.new(self.Window.Size.X.Scale, self.Window.Size.X.Offset, 0, 35)}) end)
		TitleBar.MouseButton1Click:Connect(function() if self.Window.Size.Y.Offset == 35 then Animate(self.Window, {Size = self.OriginalProperties.Size}) end end) -- Restaurar ao clicar no título
		Maximize.MouseButton1Click:Connect(function()
			local isMax = self.Window.Size == UDim2.new(1,0,1,0)
			Animate(self.Window, { Size = isMax and self.OriginalProperties.Size or UDim2.new(1,0,1,0), Position = isMax and self.OriginalProperties.Position or UDim2.fromScale(0.5,0.5) })
		end)

		-- LAYOUT PRINCIPAL (SIDEBAR + CONTEÚDO)
		local MainFrame = Create("Frame", { Name = "MainFrame", Size = UDim2.new(1, 0, 1, -35), Position = UDim2.fromOffset(0, 35), BackgroundTransparency = 1, Parent = self.Window })
		local Sidebar = Create("Frame", { Name = "Sidebar", Size = UDim2.new(0, 160, 1, 0), BackgroundColor3 = Theme.Primary, BorderSizePixel = 0, Parent = MainFrame })
		self.PageContainer = Create("Frame", { Name = "PageContainer", Size = UDim2.new(1, -160, 1, 0), Position = UDim2.fromOffset(160, 0), BackgroundColor3 = Theme.Background, ClipsDescendants = true, Parent = MainFrame })
		Create("UICorner", {CornerRadius = UDim.new(0, Theme.CornerRadius), Parent = self.PageContainer})

		self.TabContainer = Create("ScrollingFrame", { Name="TabContainer", Size=UDim2.new(1,0,1,0), BackgroundTransparency=1, BorderSizePixel=0, ScrollingDirection=Enum.ScrollingDirection.Y, ScrollBarThickness=4, ScrollBarImageColor3=Theme.Accent, Parent=Sidebar })
		Create("UIListLayout", { SortOrder = Enum.SortOrder.LayoutOrder, Padding = UDim.new(0, 5), Parent = self.TabContainer })
		Create("UIPadding", { PaddingLeft = UDim.new(0,10), PaddingRight = UDim.new(0,10), PaddingTop = UDim.new(0,10), Parent=self.TabContainer })

		return self
	end
end)
