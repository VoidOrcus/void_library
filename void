--[[
	ModernUI Library
	Autor: VoidOrcus (com assistência da IA Gemini)
	Descrição: Uma biblioteca de UI moderna para Roblox, inspirada em sistemas operacionais.
	Versão: 4.0 - Viewport do Player, Sidebar com Ícones e Rolagem, Novo Layout e Tema Refinado.
]]

local ModernUI = {}
ModernUI.__index = ModernUI

local Tab = {}
Tab.__index = Tab

--================================================================
-- SERVIÇOS E CONSTANTES
--================================================================
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")

--================================================================
-- CONFIGURAÇÃO DE TEMA
--================================================================
local Theme = {
	BackgroundColor = Color3.fromRGB(0, 43, 54),
	TitleBarColor = Color3.fromRGB(20, 22, 25),      -- NOVO: Cinza-escuro moderno para a barra de título
	AccentColor1 = Color3.fromRGB(7, 54, 66),
	TextColor = Color3.fromRGB(131, 148, 150),
	TextEmphasizedColor = Color3.fromRGB(147, 161, 161),
	PrimaryColor = Color3.fromRGB(38, 139, 210),
	CloseColor = Color3.fromRGB(220, 50, 47),
	FontTitle = Enum.Font.Code,
	FontBody = Enum.Font.Code,
	CornerRadius = 4,
	AnimationSpeed = 0.2,
}

--================================================================
-- FUNÇÕES AUXILIARES
--================================================================
local function Create(instanceType, properties)
	local inst = Instance.new(instanceType)
	for prop, value in pairs(properties or {}) do
		inst[prop] = value
	end
	return inst
end

local function Animate(instance, goal, speed)
	speed = speed or Theme.AnimationSpeed
	local tweenInfo = TweenInfo.new(speed, Enum.EasingStyle.Quart, Enum.EasingDirection.Out)
	local tween = TweenService:Create(instance, tweenInfo, goal)
	tween:Play()
	return tween
end

--================================================================
-- NOVA FUNÇÃO: VIEWPORT DO PLAYER
--================================================================
local function CreatePlayerViewport(parent)
	local viewport = Create("ViewportFrame", {
		Size = UDim2.new(1, 0, 0, 120),
		BackgroundColor3 = Theme.AccentColor1,
		BackgroundTransparency = 0.5,
		BorderSizePixel = 0,
		Parent = parent
	})
	Create("UICorner", { CornerRadius = UDim.new(0, Theme.CornerRadius), Parent = viewport })

	local world = Create("WorldModel", { Parent = viewport })
	local camera = Create("Camera", { FieldOfView = 50, Parent = viewport })
	viewport.CurrentCamera = camera

	Create("AmbientLight", { Brightness = 0.5, Color = Color3.new(1,1,1), Parent = world })
	Create("DirectionalLight", { Brightness = 0.5, Color = Color3.new(1,1,1), Rotation = Vector3.new(-45, -45, 0), Parent = world })

	local char = Players.LocalPlayer.Character or Players.LocalPlayer.CharacterAdded:Wait()
	local charClone = char:Clone()
	charClone.Parent = world
	charClone.Humanoid.DisplayDistanceType = Enum.DisplayDistanceType.None
	charClone:SetPrimaryPartCFrame(CFrame.new(0, 0, 0))

	camera.CFrame = CFrame.new(Vector3.new(0, 1, 4), charClone.HumanoidRootPart.Position)

	-- Animação de rotação suave
	RunService.Heartbeat:Connect(function()
		if not charClone or not charClone.Parent then return end
		local rot = CFrame.Angles(0, math.rad(0.5), 0)
		charClone:SetPrimaryPartCFrame(charClone.PrimaryPart.CFrame * rot)
	end)
	
	return viewport
end


--================================================================
-- CRIAÇÃO DA JANELA PRINCIPAL (REESTRUTURADA)
--================================================================
function ModernUI.CreateWindow(options)
	local self = setmetatable({}, ModernUI)
	options = options or {}; local title = options.Title or "ModernUI"; local size = options.Size or UDim2.fromOffset(600, 450); local position = options.Position or UDim2.fromScale(0.5, 0.5)
	self.Tabs = {}; self.Pages = {}; self.ActiveTabIndex = 1

	self.ScreenGui = Create("ScreenGui", { Name = "ModernUI_ScreenGui_"..math.random(1,10000), Parent = CoreGui, ZIndexBehavior = Enum.ZIndexBehavior.Global, ResetOnSpawn = false })
	if syn and syn.protect_gui then pcall(syn.protect_gui, self.ScreenGui) end

	self.WindowFrame = Create("Frame", { Name = "WindowFrame", Size = size, Position = position, AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = Theme.BackgroundColor, BackgroundTransparency = 0.6, BorderSizePixel = 0, Parent = self.ScreenGui, ClipsDescendants = true })
	Create("UICorner", { CornerRadius = UDim.new(0, Theme.CornerRadius), Parent = self.WindowFrame })
	Create("UIStroke", { Thickness = 1, Color = Theme.AccentColor1, Transparency = 0.5, Parent = self.WindowFrame })
	
	local TitleBar = Create("Frame", { Name = "TitleBar", Size = UDim2.new(1, 0, 0, 32), BackgroundColor3 = Theme.TitleBarColor, BorderSizePixel = 0, Parent = self.WindowFrame, ZIndex = 4 })
	local TitleLabel = Create("TextLabel", { Name = "TitleLabel", Size = UDim2.new(1, -70, 1, 0), Position = UDim2.fromOffset(10, 0), BackgroundTransparency = 1, Font = Theme.FontTitle, TextColor3 = Theme.TextEmphasizedColor, Text = "  > " .. title, TextXAlignment = Enum.TextXAlignment.Left, TextSize = 15, Parent = TitleBar, ZIndex = 5 })
	
	local MainContent = Create("Frame", { Name = "MainContent", Size = UDim2.new(1, 0, 1, -32), Position = UDim2.fromOffset(0, 32), BackgroundTransparency = 1, Parent = self.WindowFrame })
	Create("UIListLayout", { FillDirection = Enum.FillDirection.Horizontal, SortOrder = Enum.SortOrder.LayoutOrder, Parent = MainContent })

	-- ##################################################################
	-- # NOVA SIDEBAR COM ESTRUTURA COMPLETA                            #
	-- ##################################################################
	self.Sidebar = Create("Frame", { Name = "Sidebar", Size = UDim2.fromOffset(80, 0), SizeConstraint = Enum.SizeConstraint.RelativeYY, BackgroundColor3 = Theme.BackgroundColor, BackgroundTransparency = 0.3, Parent = MainContent })
	local SidebarLayout = Create("UIListLayout", { SortOrder = Enum.SortOrder.LayoutOrder, Padding = UDim.new(0, 10), HorizontalAlignment = Enum.HorizontalAlignment.Center, Parent = self.Sidebar })
	Create("UIPadding", { PaddingTop = UDim.new(0, 10), PaddingBottom = UDim.new(0, 10), Parent = self.Sidebar })

	-- 1. Viewport do Player
	self.PlayerViewport = CreatePlayerViewport(self.Sidebar)
	self.PlayerViewport.LayoutOrder = 1

	-- 2. Separador Superior
	Create("Frame", { Name = "Separator1", Size = UDim2.new(1, -20, 0, 1), BackgroundColor3 = Theme.AccentColor1, BorderSizePixel = 0, Parent = self.Sidebar, LayoutOrder = 2 })

	-- 3. ScrollingFrame para os Ícones das Abas
	self.TabScrollFrame = Create("ScrollingFrame", {
		Name = "TabScrollFrame", Size = UDim2.new(1, 0, 1, -182), BackgroundTransparency = 1, BorderSizePixel = 0, ScrollingDirection = Enum.ScrollingDirection.Y, ScrollBarThickness = 4, Parent = self.Sidebar, LayoutOrder = 3
	})
	local TabIconLayout = Create("UIListLayout", { SortOrder = Enum.SortOrder.LayoutOrder, Padding = UDim.new(0, 8), HorizontalAlignment = Enum.HorizontalAlignment.Center, Parent = self.TabScrollFrame })
	
	-- 4. Separador Inferior
	Create("Frame", { Name = "Separator2", Size = UDim2.new(1, -20, 0, 1), BackgroundColor3 = Theme.AccentColor1, BorderSizePixel = 0, Parent = self.Sidebar, LayoutOrder = 4 })
	
	-- 5. Label de Versão
	Create("TextLabel", { Name = "VersionLabel", Size = UDim2.new(1, 0, 0, 20), BackgroundTransparency = 1, Font = Theme.FontBody, Text = "v4.0 | ModernUI", TextColor3 = Theme.TextColor, TextSize = 12, Parent = self.Sidebar, LayoutOrder = 5 })

	local Separator = Create("Frame", { Name = "Separator", Size = UDim2.new(0, 1, 1, 0), BackgroundColor3 = Theme.AccentColor1, BorderSizePixel = 0, Parent = MainContent })
	self.PageContainer = Create("Frame", { Name = "PageContainer", Size = UDim2.new(1, -81, 1, 0), BackgroundTransparency = 1, ClipsDescendants = true, Parent = MainContent })
	
	local WindowButtonsFrame = Create("Frame", { Name = "WindowButtons", Size = UDim2.fromOffset(64, 32), Position = UDim2.new(1, -64, 0, 0), BackgroundTransparency = 1, Parent = TitleBar, ZIndex = 6 })
	Create("UIListLayout", { FillDirection = Enum.FillDirection.Horizontal, HorizontalAlignment = Enum.HorizontalAlignment.Right, VerticalAlignment = Enum.VerticalAlignment.Center, Parent = WindowButtonsFrame})
	local CloseButton = Create("ImageButton", { Name = "Close", Size = UDim2.fromOffset(32, 32), BackgroundTransparency = 1, Image = "rbxassetid://138186698594149", ImageColor3 = Theme.TextColor, Parent = WindowButtonsFrame })
	local MinimizeButton = Create("ImageButton", { Name = "Minimize", Size = UDim2.fromOffset(32, 32), BackgroundTransparency = 1, Image = "rbxassetid://134256276414393", ImageColor3 = Theme.TextColor, Parent = WindowButtonsFrame })
	CloseButton.MouseEnter:Connect(function() Animate(CloseButton, {ImageColor3 = Theme.CloseColor, BackgroundColor3 = Theme.AccentColor1, BackgroundTransparency = 0.5}) end)
	CloseButton.MouseLeave:Connect(function() Animate(CloseButton, {ImageColor3 = Theme.TextColor, BackgroundTransparency = 1}) end)
	CloseButton.MouseButton1Click:Connect(function() self.ScreenGui:Destroy() end)
	MinimizeButton.MouseEnter:Connect(function() Animate(MinimizeButton, {BackgroundColor3 = Theme.AccentColor1, BackgroundTransparency = 0.5}) end)
	MinimizeButton.MouseLeave:Connect(function() Animate(MinimizeButton, {BackgroundTransparency = 1}) end)
	local isMinimized = false
	MinimizeButton.MouseButton1Click:Connect(function() isMinimized = not isMinimized; MainContent.Visible = not isMinimized; local minimizedSize = UDim2.new(size.X.Scale, size.X.Offset, 0, TitleBar.AbsoluteSize.Y); Animate(self.WindowFrame, {Size = isMinimized and minimizedSize or size}) end)
	
	local dragging=false; local dragStart,startPos; TitleBar.InputBegan:Connect(function(i) if i.UserInputType==Enum.UserInputType.MouseButton1 or i.UserInputType==Enum.UserInputType.Touch then dragging,dragStart,startPos=true,i.Position,self.WindowFrame.Position; local c; c=i.Changed:Connect(function() if i.UserInputState==Enum.UserInputState.End then dragging=false; c:Disconnect() end end) end end)
	UserInputService.InputChanged:Connect(function(i) if(i.UserInputType==Enum.UserInputType.MouseMovement or i.UserInputType==Enum.UserInputType.Touch)and dragging then self.WindowFrame.Position=UDim2.new(startPos.X.Scale,startPos.X.Offset+(i.Position.X-dragStart.X),startPos.Y.Scale,startPos.Y.Offset+(i.Position.Y-dragStart.Y))end end)
	
	self.WindowFrame.Position = position + UDim2.fromOffset(0, 20)
	Animate(self.WindowFrame, {Position = position})
	return self
end

--================================================================
-- SISTEMA DE ABAS (Adaptado para Ícones)
--================================================================
function ModernUI:SwitchToTab(pageIndex) if not self.Pages[pageIndex] or self.ActiveTabIndex==pageIndex then return end; local oldPage=self.Pages[self.ActiveTabIndex]; local newPage=self.Pages[pageIndex]; self.ActiveTabIndex=pageIndex; local oldCanvas=oldPage:FindFirstChildOfClass("CanvasGroup"); if oldCanvas then Animate(oldCanvas,{GroupTransparency=1},0.15)end; task.wait(0.15); oldPage.Visible=false; newPage.Visible=true; local newCanvas=newPage:FindFirstChildOfClass("CanvasGroup"); if newCanvas then newCanvas.GroupTransparency=1;Animate(newCanvas,{GroupTransparency=0},0.15)end; for i,button in ipairs(self.Tabs)do local isSelected=(i==pageIndex); local goalBgColor=isSelected and Theme.AccentColor1 or Theme.BackgroundColor; Animate(button,{BackgroundColor3=goalBgColor})end end
function ModernUI:AddTab(tabInfo)
	local tabIndex = #self.Tabs + 1
	local page = Create("Frame", { Name = tabInfo.Name .. "Page", Size = UDim2.new(1, 0, 1, 0), BackgroundTransparency = 1, ClipsDescendants = true, Visible = (tabIndex == 1), Parent = self.PageContainer })
	local canvas = Create("CanvasGroup", { Name = "PageCanvas", Size = UDim2.new(1,0,1,0), BackgroundColor3 = Theme.AccentColor1, BackgroundTransparency = 0.5, Parent = page, GroupTransparency = (tabIndex == 1) and 0 or 1, })
	Create("UICorner", {CornerRadius = UDim.new(0, Theme.CornerRadius), Parent = canvas}); Create("UIListLayout", { Padding = UDim.new(0, 10), SortOrder = Enum.SortOrder.LayoutOrder, HorizontalAlignment = Enum.HorizontalAlignment.Center, Parent = canvas }); Create("UIPadding", { PaddingTop = UDim.new(0, 15), PaddingBottom = UDim.new(0, 15), PaddingLeft = UDim.new(0, 15), PaddingRight = UDim.new(0, 15), Parent = canvas })
	table.insert(self.Pages, page)
	
	local tabButton = Create("ImageButton", { Name = tabInfo.Name, Size = UDim2.fromOffset(48, 48), BackgroundColor3 = Theme.BackgroundColor, Image = tabInfo.Icon, Parent = self.TabScrollFrame, AutoButtonColor = false })
	Create("UICorner", {CornerRadius = UDim.new(0, 6), Parent = tabButton}); Create("UIStroke", {Color=Theme.AccentColor1, Parent=tabButton})
	table.insert(self.Tabs, tabButton)
	
	tabButton.MouseEnter:Connect(function() Animate(tabButton, {ImageColor3 = Theme.PrimaryColor}) end)
	tabButton.MouseLeave:Connect(function() Animate(tabButton, {ImageColor3 = Color3.new(1,1,1)}) end)
	tabButton.MouseButton1Click:Connect(function() self:SwitchToTab(tabIndex) end)
	
	if tabIndex == 1 then self:SwitchToTab(1) end
	
	local tabObject = setmetatable({}, Tab); tabObject.Window = self; tabObject.PageContents = canvas; return tabObject
end

--================================================================
-- MÉTODOS DOS COMPONENTES
--================================================================
function Tab:AddLabel(options) options=options or{};options.Parent=self.PageContents;local l=Create("TextLabel",{Name="Label",Text=options.Title or"Label",Font=options.Font or Theme.FontBody,TextSize=options.TextSize or 16,TextColor3=options.Color or Theme.TextEmphasizedColor,TextXAlignment=Enum.TextXAlignment.Left,Size=UDim2.new(1,0,0,options.TextSize or 16),BackgroundTransparency=1,Parent=options.Parent,LayoutOrder=options.Order or 0});if options.Animate then Animate(l,{Position=l.Position,TextTransparency=0},0.5)end;return l end
function Tab:AddButton(options) options=options or{};options.Parent=self.PageContents;local b=Create("TextButton",{Name="Button",Text=options.Title or"Button",Font=Theme.FontBody,TextSize=16,TextColor3=Theme.TextEmphasizedColor,BackgroundColor3=Theme.AccentColor1,Size=UDim2.new(1,0,0,38),Parent=options.Parent,LayoutOrder=options.Order or 0,AutoButtonColor=false});Create("UICorner",{CornerRadius=UDim.new(0,Theme.CornerRadius-2),Parent=b});b.MouseEnter:Connect(function()Animate(b,{BackgroundColor3=Theme.PrimaryColor,TextColor3=Color3.new(1,1,1)})end);b.MouseLeave:Connect(function()Animate(b,{BackgroundColor3=Theme.AccentColor1,TextColor3=Theme.TextEmphasizedColor})end);b.MouseButton1Click:Connect(function()if options.Callback then task.spawn(options.Callback)end;local t=Animate(b,{Size=UDim2.new(1,0,0,36)},0.1);t.Completed:Connect(function()Animate(b,{Size=UDim2.new(1,0,0,38)},0.1)end)end);return b end
function Tab:AddSlider(options) options=options or{};options.Parent=self.PageContents;local min,max,def=options.Min or 0,options.Max or 100,options.Default or 50;local h=Create("Frame",{Name="SliderHolder",Size=UDim2.new(1,0,0,50),BackgroundTransparency=1,Parent=options.Parent,LayoutOrder=options.Order or 0});local tL=Create("TextLabel",{Name="Title",Text=options.Title or"Slider",Font=Theme.FontBody,TextSize=16,TextColor3=Theme.TextColor,TextXAlignment=Enum.TextXAlignment.Left,Size=UDim2.new(0.7,0,0,16),Position=UDim2.fromOffset(0,0),BackgroundTransparency=1,Parent=h});local vL=Create("TextLabel",{Name="Value",Text=tostring(math.floor(def)),Font=Theme.FontBody,TextSize=16,TextColor3=Theme.TextColor,TextXAlignment=Enum.TextXAlignment.Right,Size=UDim2.new(0.3,0,0,16),Position=UDim2.new(0.7,0,0,0),BackgroundTransparency=1,Parent=h});local tr=Create("Frame",{Name="Track",Size=UDim2.new(1,0,0,6),Position=UDim2.new(0,0,0,30),BackgroundColor3=Theme.AccentColor1,Parent=h});Create("UICorner",{Parent=tr});local p=Create("Frame",{Name="Progress",Size=UDim2.new((def-min)/(max-min),0,1,0),BackgroundColor3=Theme.PrimaryColor,Parent=tr});Create("UICorner",{Parent=p});local th=Create("TextButton",{Name="Thumb",Size=UDim2.fromOffset(18,18),Position=UDim2.new(p.Size.X.Scale,-9,0.5,-9),BackgroundColor3=Theme.TextEmphasizedColor,Parent=tr,ZIndex=6,Text=""});Create("UICorner",{CornerRadius=UDim.new(1,0),Parent=th});local function Upd(x)local rX=x-tr.AbsolutePosition.X;local pct=math.clamp(rX/tr.AbsoluteSize.X,0,1);local val=min+(max-min)*pct;p.Size=UDim2.new(pct,0,1,0);th.Position=UDim2.new(pct,-9,0.5,-9);vL.Text=tostring(math.floor(val));if options.Callback then options.Callback(val)end end;th.InputBegan:Connect(function(i)if i.UserInputType==Enum.UserInputType.MouseButton1 or i.UserInputType==Enum.UserInputType.Touch then local c1=UserInputService.InputChanged:Connect(function(m)if m.UserInputType==Enum.UserInputType.MouseMovement or m.UserInputType==Enum.UserInputType.Touch then Upd(m.Position.X)end end);local c2=UserInputService.InputEnded:Connect(function(e)if e==i then c1:Disconnect();c2:Disconnect()end end)end end);return h end
function Tab:AddDropdown(options) options=options or{};options.Parent=self.PageContents;local vals,def,isOpen=options.Values or{"Opt 1"},options.Default or vals[1],false;local h=Create("Frame",{Name="DropdownHolder",Size=UDim2.new(1,0,0,38),BackgroundTransparency=1,Parent=options.Parent,LayoutOrder=options.Order or 0,ZIndex=10});local mB=Create("TextButton",{Name="Main",Text="  "..tostring(def),Font=Theme.FontBody,TextSize=16,TextColor3=Theme.TextEmphasizedColor,BackgroundColor3=Theme.AccentColor1,Size=UDim2.new(1,0,1,0),Parent=h,TextXAlignment=Enum.TextXAlignment.Left,AutoButtonColor=false});Create("UICorner",{CornerRadius=UDim.new(0,Theme.CornerRadius-2),Parent=mB});local a=Create("ImageLabel",{Image="rbxassetid://3926305904",ImageColor3=Theme.TextColor,Size=UDim2.fromOffset(20,20),AnchorPoint=Vector2.new(1,0.5),Position=UDim2.new(1,-10,0.5,0),BackgroundTransparency=1,Parent=mB});local dL=Create("Frame",{Name="List",Size=UDim2.new(1,0,0,0),Position=UDim2.new(0,0,1,5),BackgroundColor3=Theme.AccentColor1,BorderSizePixel=0,ClipsDescendants=true,Visible=false,Parent=h,ZIndex=9});Create("UICorner",{CornerRadius=UDim.new(0,Theme.CornerRadius-2),Parent=dL});Create("UIListLayout",{SortOrder=Enum.SortOrder.LayoutOrder,Padding=UDim.new(0,2)},dL);local function Tog()isOpen=not isOpen;dL.Visible=true;local lH=(#vals*32)+((#vals-1)*2);Animate(a,{Rotation=isOpen and 180 or 0});Animate(dL,{Size=UDim2.new(1,0,0,isOpen and lH or 0)},0.3);if not isOpen then task.wait(0.3);dL.Visible=false end end;for i,v in ipairs(vals)do local iB=Create("TextButton",{Name=v,Text="  "..tostring(v),LayoutOrder=i,Font=Theme.FontBody,TextSize=15,TextColor3=Theme.TextEmphasizedColor,BackgroundColor3=Theme.AccentColor1,Size=UDim2.new(1,0,0,32),Parent=dL,TextXAlignment=Enum.TextXAlignment.Left,AutoButtonColor=false});iB.MouseEnter:Connect(function()Animate(iB,{BackgroundColor3=Theme.PrimaryColor,TextColor3=Color3.new(1,1,1)})end);iB.MouseLeave:Connect(function()Animate(iB,{BackgroundColor3=Theme.AccentColor1,TextColor3=Theme.TextEmphasizedColor})end);iB.MouseButton1Click:Connect(function()mB.Text="  "..tostring(v);if options.Callback then task.spawn(options.Callback,v)end;Tog()end)end;mB.MouseButton1Click:Connect(Tog);return h end

return ModernUI
